apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    deployment.kubernetes.io/revision: "1"
    kubectl.kubernetes.io/last-applied-configuration: |
      {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{"deployment.kubernetes.io/revision":"1"},"creationTimestamp":"2022-12-12T21:53:07Z","generation":1,"labels":{"app":"api-gateway"},"name":"api-gateway","namespace":"default","resourceVersion":"3346","uid":"c9c4543a-f6a1-46a9-b0d9-e428359c93f7"},"spec":{"progressDeadlineSeconds":600,"replicas":1,"revisionHistoryLimit":10,"selector":{"matchLabels":{"app":"api-gateway"}},"strategy":{"rollingUpdate":{"maxSurge":"25%","maxUnavailable":"25%"},"type":"RollingUpdate"},"template":{"metadata":{"creationTimestamp":null,"labels":{"app":"api-gateway"}},"spec":{"containers":[{"image":"walidelass/api-gateway:submission","imagePullPolicy":"IfNotPresent","name":"api-gateway","resources":{},"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File"}],"dnsPolicy":"ClusterFirst","restartPolicy":"Always","schedulerName":"default-scheduler","securityContext":{},"terminationGracePeriodSeconds":30}}},"status":{"conditions":[{"lastTransitionTime":"2022-12-12T21:53:07Z","lastUpdateTime":"2022-12-12T21:53:26Z","message":"ReplicaSet \"api-gateway-5fd4974598\" has successfully progressed.","reason":"NewReplicaSetAvailable","status":"True","type":"Progressing"},{"lastTransitionTime":"2022-12-12T21:54:54Z","lastUpdateTime":"2022-12-12T21:54:54Z","message":"Deployment does not have minimum availability.","reason":"MinimumReplicasUnavailable","status":"False","type":"Available"}],"observedGeneration":1,"replicas":1,"unavailableReplicas":1,"updatedReplicas":1}}
  creationTimestamp: "2022-12-22T18:46:24Z"
  generation: 2
  labels:
    app: api-gateway
  name: api-gateway
  namespace: default
  resourceVersion: "359997"
  uid: 40a53d7a-281a-48a5-a10d-e3a474b1b2e3
spec:
  progressDeadlineSeconds: 600
  replicas: 2
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: api-gateway
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: api-gateway
    spec:
      containers:
      - image: walidelass/api-gateway:submission
        imagePullPolicy: IfNotPresent
        name: api-gateway
        livenessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 5
          periodSeconds: 30
        resources: {}
        env:
        - name:  LOGIC_API_URL
          value: http://logic-api:5000/
        - name:  FEEDBACK_API_URL
          value: http://feedback-api:9000/
        - name: SERVER_PORT
          value: '8080'
        ports:
        - containerPort:  8080
          name:  api-gateway
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
status:
  conditions:
  - lastTransitionTime: "2022-12-22T18:46:24Z"
    lastUpdateTime: "2022-12-22T18:46:48Z"
    message: ReplicaSet "api-gateway-5fd4974598" has successfully progressed.
    reason: NewReplicaSetAvailable
    status: "True"
    type: Progressing
  - lastTransitionTime: "2022-12-22T18:58:08Z"
    lastUpdateTime: "2022-12-22T18:58:08Z"
    message: Deployment does not have minimum availability.
    reason: MinimumReplicasUnavailable
    status: "False"
    type: Available
  observedGeneration: 2
  replicas: 2
  unavailableReplicas: 2
  updatedReplicas: 2

---

apiVersion: v1
kind: Service
metadata:
  name: api-gateway-svc
spec:
  type: ClusterIP
  selector:
    app: api-gateway
  ports:
  - name: http
    port: 8080
    targetPort: 8080
